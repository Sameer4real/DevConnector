[{"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/index.js":"1","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/App.js":"2","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/store.js":"3","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/utils/setAuthToken.js":"4","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/auth.js":"5","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/auth/Login.js":"6","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Navbar.js":"7","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Landing.js":"8","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/routing/PrivateRoute.js":"9","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Alert.js":"10","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/auth/Register.js":"11","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/Dashboard.js":"12","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/AddExperience.js":"13","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/AddEducation.js":"14","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/CreateProfile.js":"15","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profiles/Profiles.js":"16","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/EditProfile.js":"17","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/Profile.js":"18","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/types.js":"19","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/alert.js":"20","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Spinner.js":"21","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/profile.js":"22","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/Experience.js":"23","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/DashboardActions.js":"24","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/Education.js":"25","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profiles/ProfileItem.js":"26","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileTop.js":"27","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileAbout.js":"28","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/index.js":"29","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/alert.js":"30","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/auth.js":"31","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/profile.js":"32","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileExperience.js":"33","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileEducation.js":"34","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileGithub.js":"35","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/post.js":"36","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/posts/Posts.js":"37","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/post.js":"38","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/posts/PostItem.js":"39","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/posts/PostForm.js":"40","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/Post.js":"41","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/CommentForm.js":"42","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/CommentItem.js":"43","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/NotFound.js":"44","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/routing/Routes.js":"45"},{"size":198,"mtime":1633328470155,"results":"46","hashOfConfig":"47"},{"size":972,"mtime":1635236957158,"results":"48","hashOfConfig":"47"},{"size":383,"mtime":1633335844193,"results":"49","hashOfConfig":"47"},{"size":242,"mtime":1634120875026,"results":"50","hashOfConfig":"47"},{"size":2082,"mtime":1634202753997,"results":"51","hashOfConfig":"47"},{"size":1937,"mtime":1635144279418,"results":"52","hashOfConfig":"47"},{"size":1636,"mtime":1635143769999,"results":"53","hashOfConfig":"47"},{"size":1099,"mtime":1634200825466,"results":"54","hashOfConfig":"47"},{"size":716,"mtime":1634194062608,"results":"55","hashOfConfig":"47"},{"size":646,"mtime":1634104777995,"results":"56","hashOfConfig":"47"},{"size":2951,"mtime":1634123896795,"results":"57","hashOfConfig":"47"},{"size":1928,"mtime":1634546734547,"results":"58","hashOfConfig":"47"},{"size":3421,"mtime":1634546926245,"results":"59","hashOfConfig":"47"},{"size":3450,"mtime":1634546908290,"results":"60","hashOfConfig":"47"},{"size":6808,"mtime":1634454878920,"results":"61","hashOfConfig":"47"},{"size":1293,"mtime":1635233169926,"results":"62","hashOfConfig":"47"},{"size":8063,"mtime":1634547141588,"results":"63","hashOfConfig":"47"},{"size":2916,"mtime":1635062331914,"results":"64","hashOfConfig":"47"},{"size":1020,"mtime":1635155500321,"results":"65","hashOfConfig":"47"},{"size":396,"mtime":1633352523829,"results":"66","hashOfConfig":"47"},{"size":283,"mtime":1634547064584,"results":"67","hashOfConfig":"47"},{"size":5535,"mtime":1635231450556,"results":"68","hashOfConfig":"47"},{"size":1393,"mtime":1634460358746,"results":"69","hashOfConfig":"47"},{"size":643,"mtime":1635062268330,"results":"70","hashOfConfig":"47"},{"size":1379,"mtime":1634547159896,"results":"71","hashOfConfig":"47"},{"size":976,"mtime":1635233485155,"results":"72","hashOfConfig":"47"},{"size":1838,"mtime":1635147335082,"results":"73","hashOfConfig":"47"},{"size":848,"mtime":1634550495299,"results":"74","hashOfConfig":"47"},{"size":222,"mtime":1635142857444,"results":"75","hashOfConfig":"47"},{"size":387,"mtime":1634547238255,"results":"76","hashOfConfig":"47"},{"size":1078,"mtime":1634547262279,"results":"77","hashOfConfig":"47"},{"size":1015,"mtime":1635229371997,"results":"78","hashOfConfig":"47"},{"size":733,"mtime":1635062374266,"results":"79","hashOfConfig":"47"},{"size":808,"mtime":1635062392710,"results":"80","hashOfConfig":"47"},{"size":1699,"mtime":1635066008508,"results":"81","hashOfConfig":"47"},{"size":1609,"mtime":1635231502661,"results":"82","hashOfConfig":"47"},{"size":1017,"mtime":1635150421540,"results":"83","hashOfConfig":"47"},{"size":3584,"mtime":1635160182182,"results":"84","hashOfConfig":"47"},{"size":2298,"mtime":1635228984414,"results":"85","hashOfConfig":"47"},{"size":1025,"mtime":1635159217195,"results":"86","hashOfConfig":"47"},{"size":1242,"mtime":1635160480195,"results":"87","hashOfConfig":"47"},{"size":1037,"mtime":1635160610109,"results":"88","hashOfConfig":"47"},{"size":1418,"mtime":1635231711391,"results":"89","hashOfConfig":"47"},{"size":397,"mtime":1635236536511,"results":"90","hashOfConfig":"47"},{"size":1668,"mtime":1635237181039,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1co45az",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/index.js",[],["190","191"],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/App.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/store.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/utils/setAuthToken.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/auth.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/auth/Login.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Navbar.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Landing.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/routing/PrivateRoute.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Alert.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/auth/Register.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/Dashboard.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/AddExperience.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/AddEducation.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/CreateProfile.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profiles/Profiles.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile-forms/EditProfile.js",["192"],"import React, { useState, Fragment, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nfunction EditProfile({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n}\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/Profile.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/types.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/alert.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/Spinner.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/profile.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/Experience.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/DashboardActions.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/dashboard/Education.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profiles/ProfileItem.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileTop.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileAbout.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/index.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/alert.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/auth.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/profile.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileExperience.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileEducation.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/profile/ProfileGithub.js",["193"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div className=\"repo bg-white p-1 my-1\" key={repo.id}>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className=\"badge badge-primary\">\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className=\"badge badge-dark\">\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/reducers/post.js",["194"],"import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n        },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/posts/Posts.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/actions/post.js",["195"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  ADD_POST,\n  DELETE_POST,\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n// Delete Post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Comments\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Comments\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/posts/PostItem.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/posts/PostForm.js",["196"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\nimport { set } from \"mongoose\";\n\nfunction PostForm({ addPost }) {\n  const [text, setText] = useState(\"\");\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className=\"form my-1\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          addPost({ text });\n          setText(\"\");\n        }}\n      >\n        <textarea\n          name=\"text\"\n          cols=\"30\"\n          rows=\"5\"\n          placeholder=\"Create a post\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/Post.js",["197"],"import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPost } from \"../../actions/post\";\n\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"../post/CommentForm\";\nimport CommentItem from \"../post/CommentItem\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    console.log(match.params.id, \"helloooo\");\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/CommentForm.js",[],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/CommentItem.js",["198"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={(e) => {\n              deleteComment(postId, _id);\n            }}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/layout/NotFound.js",["199"],"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/routing/Routes.js",[],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":48,"column":6,"nodeType":"206","endLine":48,"endColumn":34,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":10,"column":6,"nodeType":"206","endLine":10,"endColumn":22,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":19,"column":1,"nodeType":"212","endLine":81,"endColumn":2},{"ruleId":"213","severity":1,"message":"214","line":157,"column":11,"nodeType":"215","messageId":"216","endLine":157,"endColumn":14},{"ruleId":"213","severity":1,"message":"217","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":13},{"ruleId":"204","severity":1,"message":"218","line":16,"column":6,"nodeType":"206","endLine":16,"endColumn":15,"suggestions":"219"},{"ruleId":"213","severity":1,"message":"220","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":25},{"ruleId":"213","severity":1,"message":"221","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":17},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["224"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["225"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'set' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["226"],"'Fragment' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"233","text":"234"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"235","text":"236"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"237","text":"238"},[1650,1678],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[335,351],"[getGithubRepos, username]",[558,567],"[getPost, match.params.id]"]