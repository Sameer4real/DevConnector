{"ast":null,"code":"var _jsxFileName = \"/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/CommentItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => {\n  _s();\n\n  const [test, setTest] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${user}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img\",\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          deleteComment(postId, _id);\n          setTest(true);\n        },\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, test, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentItem, \"kvkbjmMX90FHDbCd6+Au31Jvy7I=\");\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["/home/sameer4real/Desktop/Projects/DevConnector/DevConnector/client/src/components/post/CommentItem.js"],"names":["React","Fragment","useState","PropTypes","connect","Link","Moment","deleteComment","CommentItem","postId","comment","_id","text","name","avatar","user","date","auth","test","setTest","loading","e","propTypes","number","isRequired","object","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,GAFU;AAGnBC,EAAAA,IAHmB;AAInBV,EAAAA;AAJmB,CAAD,KAKd;AAAA;;AACJ,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,sBACE;AAAgB,IAAA,SAAS,EAAC,wBAA1B;AAAA,4BACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWa,IAAK,EAA3B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAED,MAAhC;AAAwC,UAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,8CACY,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,YAAf;AAAA,oBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKG,CAACC,IAAI,CAACG,OAAN,IAAiBL,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,iBACC;AACE,QAAA,OAAO,EAAGU,CAAD,IAAO;AACdd,UAAAA,aAAa,CAACE,MAAD,EAASE,GAAT,CAAb;AACAQ,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD,SAJH;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,SAAS,EAAC,gBANZ;AAAA,+BAQE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,KAAUD,IAAV;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnCD;;GAAMV,W;;KAAAA,W;AAqCNA,WAAW,CAACc,SAAZ,GAAwB;AACtBb,EAAAA,MAAM,EAAEN,SAAS,CAACoB,MAAV,CAAiBC,UADH;AAEtBd,EAAAA,OAAO,EAAEP,SAAS,CAACsB,MAAV,CAAiBD,UAFJ;AAGtBP,EAAAA,IAAI,EAAEd,SAAS,CAACsB,MAAV,CAAiBD,UAHD;AAItBjB,EAAAA,aAAa,EAAEJ,SAAS,CAACuB,IAAV,CAAeF;AAJR,CAAxB;;AAOA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAACuB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,WAA5C,CAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => {\n  const [test, setTest] = useState(false);\n  return (\n    <div key={test} className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={(e) => {\n              deleteComment(postId, _id);\n              setTest(true);\n            }}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n"]},"metadata":{},"sourceType":"module"}